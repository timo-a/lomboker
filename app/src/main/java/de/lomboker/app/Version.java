/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.lomboker.app;

import de.lomboker.lib.FuzzyGetters;
import de.lomboker.lib.FuzzySetters;
import de.lomboker.lib.TrivialGetters;
import de.lomboker.lib.TrivialSetters;
import picocli.CommandLine;
import picocli.CommandLine.Command;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Enumeration;
import java.util.Objects;
import java.util.Properties;
import java.util.Scanner;
import java.util.stream.Collectors;

@Command(name = "version", description = "no options or positional parameters")
public class Version implements Runnable {

    public static void main(String[] args) {
        int exitCode = new CommandLine(new Version()).execute(args);
        System.exit(exitCode);
	}

    @Override
    public void run() {
        String version = readWithScanner();

        if(version == null)
            version = " - error retrieving version";

        System.out.println("Lomboker " + version);
    }

    public Version() {
    }

    private String readWithScanner(){
        String fileName = "/version.txt";

        InputStream is = getClass().getResourceAsStream(fileName);
        if (is == null) {
            System.out.println("resource not found");
            return "resource not found";
        }
        String text = new Scanner(is, StandardCharsets.UTF_8)
                .useDelimiter("\\A") //no delimiter, read all at once
                .next();

        return text;
    }
}
