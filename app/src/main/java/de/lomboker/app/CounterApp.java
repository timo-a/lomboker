/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.lomboker.app;

import de.lomboker.lib.FuzzyGetters;
import de.lomboker.lib.FuzzySetters;
import de.lomboker.lib.TrivialGetters;
import de.lomboker.lib.TrivialSetters;
import picocli.CommandLine;
import picocli.CommandLine.Command;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Path;

@Command(name = "count", description = "no options or positional parameters")
public class CounterApp implements Runnable {

    public static void main(String[] args) {
        int exitCode = new CommandLine(new CounterApp()).execute(args);
        System.exit(exitCode);
	}

    @Override
    public void run() {
        InputStreamReader isReader = new InputStreamReader(System.in);
        BufferedReader bufReader = new BufferedReader(isReader);
        String inputStr = "";
        while(inputStr != null){
            String count;
            try {
                inputStr = bufReader.readLine();
                if (inputStr == null)
                    break;

                count = evaluateFile(inputStr);

            } catch (IOException e) {
                count = "IOException while reading line from stdin";
            }
            System.out.println(inputStr + " " + count);
        }

    }

    private static String evaluateFile(String fname) {
        String code;
        try {
            code = Files.readString(Path.of(fname));
        } catch (IOException e) {
            return fname + " ioexception reading file";
        }
        int trivialGetters = TrivialGetters.countTrivialGetters(code);
        int fuzzyGetters   = FuzzyGetters.countFuzzyGetters(code);

        int trivialSetters = TrivialSetters.countTrivialSetters(code);
        int fuzzySetters   = FuzzySetters.countFuzzySetters(code);

        return String.format("%d %d %d %d",
                trivialGetters,
                fuzzyGetters,
                trivialSetters,
                fuzzySetters );
    }
}
